# Project: Projeto Prismata
# Makefile created by Dev-C++ 5.11

CPP      = g++.exe
CC       = gcc.exe
WINDRES  = windres.exe
OBJ      = main.o base_unidades.o Drone.o Engeneer.o Conduit.o Blastforge.o Animus.o Forcefield.o GaussCannon.o Wall.o Steelsplitter.o Tarsier.o Rhino.o Analise_inicial.o Analise_turno.o Player.o Set_unidades.o
LINKOBJ  = main.o base_unidades.o Drone.o Engeneer.o Conduit.o Blastforge.o Animus.o Forcefield.o GaussCannon.o Wall.o Steelsplitter.o Tarsier.o Rhino.o Analise_inicial.o Analise_turno.o Player.o Set_unidades.o
LIBS     = -L"C:/Program Files (x86)/Dev-Cpp/MinGW64/lib" -L"C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/lib" -static-libgcc
INCS     = -I"C:/Program Files (x86)/Dev-Cpp/MinGW64/include" -I"C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include" -I"C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include"
CXXINCS  = -I"C:/Program Files (x86)/Dev-Cpp/MinGW64/include" -I"C:/Program Files (x86)/Dev-Cpp/MinGW64/x86_64-w64-mingw32/include" -I"C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include" -I"C:/Program Files (x86)/Dev-Cpp/MinGW64/lib/gcc/x86_64-w64-mingw32/4.9.2/include/c++"
BIN      = "Projeto Prismata.exe"
CXXFLAGS = $(CXXINCS) 
CFLAGS   = $(INCS) 
RM       = rm.exe -f

.PHONY: all all-before all-after clean clean-custom

all: all-before $(BIN) all-after

clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CPP) $(LINKOBJ) -o $(BIN) $(LIBS)

main.o: main.cpp
	$(CPP) -c main.cpp -o main.o $(CXXFLAGS)

base_unidades.o: base_unidades.cpp
	$(CPP) -c base_unidades.cpp -o base_unidades.o $(CXXFLAGS)

Drone.o: Drone.cpp
	$(CPP) -c Drone.cpp -o Drone.o $(CXXFLAGS)

Engeneer.o: Engeneer.cpp
	$(CPP) -c Engeneer.cpp -o Engeneer.o $(CXXFLAGS)

Conduit.o: Conduit.cpp
	$(CPP) -c Conduit.cpp -o Conduit.o $(CXXFLAGS)

Blastforge.o: Blastforge.cpp
	$(CPP) -c Blastforge.cpp -o Blastforge.o $(CXXFLAGS)

Animus.o: Animus.cpp
	$(CPP) -c Animus.cpp -o Animus.o $(CXXFLAGS)

Forcefield.o: Forcefield.cpp
	$(CPP) -c Forcefield.cpp -o Forcefield.o $(CXXFLAGS)

GaussCannon.o: GaussCannon.cpp
	$(CPP) -c GaussCannon.cpp -o GaussCannon.o $(CXXFLAGS)

Wall.o: Wall.cpp
	$(CPP) -c Wall.cpp -o Wall.o $(CXXFLAGS)

Steelsplitter.o: Steelsplitter.cpp
	$(CPP) -c Steelsplitter.cpp -o Steelsplitter.o $(CXXFLAGS)

Tarsier.o: Tarsier.cpp
	$(CPP) -c Tarsier.cpp -o Tarsier.o $(CXXFLAGS)

Rhino.o: Rhino.cpp
	$(CPP) -c Rhino.cpp -o Rhino.o $(CXXFLAGS)

Analise_inicial.o: Analise_inicial.cpp
	$(CPP) -c Analise_inicial.cpp -o Analise_inicial.o $(CXXFLAGS)

Analise_turno.o: Analise_turno.cpp
	$(CPP) -c Analise_turno.cpp -o Analise_turno.o $(CXXFLAGS)

Player.o: Player.cpp
	$(CPP) -c Player.cpp -o Player.o $(CXXFLAGS)

Set_unidades.o: Set_unidades.cpp
	$(CPP) -c Set_unidades.cpp -o Set_unidades.o $(CXXFLAGS)
